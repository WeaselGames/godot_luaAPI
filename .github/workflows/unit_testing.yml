name: ‚öôÔ∏è Unit Tests
on:
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - "**/README.md"
      - ".github/ISSUE_TEMPLATE/*"
  push:
    branches:
      - "main"
    paths-ignore:
      - "**/README.md"
      - ".github/ISSUE_TEMPLATE/*"

env:
  BASE_BRANCH: main
  SCONSFLAGS: debug_symbols=no
  SCONS_CACHE_LIMIT: 7168

jobs:
  module-unit-tests:
    runs-on: "ubuntu-20.04"
    timeout-minutes: 120
    name: Module Unit Testing
    steps:
      - uses: actions/checkout@v3
      - name: Wait for editor to build
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.ref }}
          check-name: 'Linux Editor(platform=linuxbsd tools=yes target=editor)'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success
      - name: Download editor
        id: download-editor
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: linux.yml
          workflow_conclusion: success
          name: linux-editor
      - name: Unit Testing
        run: |
          rm -rf project/addons
          ./godot.linuxbsd.editor.x86_64.luaAPI --headless --path project/
          mv project/log.txt project/module-log.txt
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-results
          path: project/module-log.txt
          
  extension-unit-tests:
    runs-on: "ubuntu-20.04"
    timeout-minutes: 120
    name: GDExtension Unit Testing
    steps:
      - uses: actions/checkout@v3 # we save some time by not recursing here since we dont need to.
      - name: Download godot beta 16
        uses: wei/wget@v1
        with:
          args: -O godot.zip https://downloads.tuxfamily.org/godotengine/4.0/beta16/Godot_v4.0-beta16_linux.x86_64.zip
      - name: Extract godot
        run: |
          7z x godot.zip
          mv *_linux.x86_64 godot
      - name: Wait for extension to build
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.ref }}
          running-workflow-name: 'üõ†Ô∏è GDExtension'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success
      - name: Download Extension
        id: download-extension
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: godot_extension.yml
          workflow_conclusion: success
          name: godot_luaAPI
          path: project/
      - name: Unit Testing
        run: |
          ./godot --headless --path project/
          mv project/log.txt project/extension-log.txt
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-results
          path: project/extension-log.txt