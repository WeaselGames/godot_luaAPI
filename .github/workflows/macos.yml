name: üçé macOS
on:
  workflow_call:

env:
  BASE_BRANCH: main
  SCONSFLAGS: "production=yes extra_suffix=luaAPI"
  SCONS_CACHE_LIMIT: 7168

jobs:
  macos-builds:
    runs-on: "macos-latest"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macOS Editor (target=editor)
            cache-name: macos-editor-luaapi
            editor: true
            build-options: "target=editor"

          - name: macOS Editor LuaJIT (target=editor, luaapi_luaver=jit)
            cache-name: macos-editor-luajit-luaapi
            editor: true
            build-options: "target=editor luaapi_luaver=jit"

          - name: macOS Template
            cache-name: macos-template-luaapi
            template: true

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Vulkan SDK
        run: |
          sh scripts/install_vulkan_sdk_macos.sh

      - name: Load .scons_cache directory
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{matrix.cache-name}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{matrix.cache-name}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{matrix.cache-name}}-${{env.BASE_BRANCH}}-${{github.ref}}
            ${{matrix.cache-name}}-${{env.BASE_BRANCH}}

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
          architecture: "x64"

      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version

      - name: Compilation (editor)
        working-directory: ./scripts
        if: ${{ matrix.editor }}
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons platform=macos arch=x86_64 ${{ matrix.build-options }} ${{ env.SCONSFLAGS }}
          scons platform=macos arch=arm64 ${{ matrix.build-options }} ${{ env.SCONSFLAGS }}

      - name: Compilation (template)
        working-directory: ./scripts
        if: ${{ matrix.template }}
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          scons platform=macos arch=x86_64 target=template_debug ${{ env.SCONSFLAGS }}
          scons platform=macos arch=arm64 target=template_debug ${{ env.SCONSFLAGS }}
          scons platform=macos arch=x86_64 target=template_release ${{ env.SCONSFLAGS }}
          scons platform=macos arch=arm64 target=template_release ${{ env.SCONSFLAGS }}

      - name: Make universal binaries and bundle (editor)
        working-directory: ./scripts/godot
        if: ${{ matrix.editor }}
        run: |
          lipo -create bin/godot.macos.editor.x86_64.luaAPI bin/godot.macos.editor.arm64.luaAPI -output bin/godot.macos.editor.universal.luaAPI
          strip bin/godot.macos.editor.universal.luaAPI
          mkdir app
          cp -r misc/dist/macos_tools.app app/Godot.app
          mkdir app/Godot.app/Contents/MacOS
          cp bin/godot.macos.editor.universal.luaAPI app/Godot.app/Contents/MacOS/Godot
          chmod +x app/Godot.app/Contents/MacOS/Godot

      - name: Make universal binaries and bundle (template)
        working-directory: ./scripts/godot
        if: ${{ matrix.template }}
        run: |
          lipo -create bin/godot.macos.template_debug.x86_64.luaAPI bin/godot.macos.template_debug.arm64.luaAPI -output bin/godot.macos.template_debug.universal.luaAPI
          lipo -create bin/godot.macos.template_release.x86_64.luaAPI bin/godot.macos.template_release.arm64.luaAPI -output bin/godot.macos.template_release.universal.luaAPI
          strip bin/godot.*
          mkdir app
          cp -r misc/dist/macos_template.app app/macos_template.app
          mkdir app/macos_template.app/Contents/MacOS
          cp bin/godot.macos.template_debug.universal.luaAPI app/macos_template.app/Contents/MacOS/godot_macos_debug.universal.luaAPI
          cp bin/godot.macos.template_release.universal.luaAPI app/macos_template.app/Contents/MacOS/godot_macos_release.universal.luaAPI
          chmod +x app/macos_template.app/Contents/MacOS/godot_macos_debug.universal.luaAPI
          chmod +x app/macos_template.app/Contents/MacOS/godot_macos_release.universal.luaAPI

      - name: Prepare artifact
        run: |
          cp -n '${{ github.workspace }}/README.md' '${{ github.workspace }}/LICENSE' ${{ github.workspace }}/scripts/godot/bin/
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.cache-name}}
          path: scripts/godot/bin
