name: GDExtension-LuaJIT
on:
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - "**/README.md"
      - ".github/ISSUE_TEMPLATE/*"
  push:
    branches:
      - "main"
    paths-ignore:
      - "**/README.md"
      - ".github/ISSUE_TEMPLATE/*"
env:
  BASE_BRANCH: main

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux-debug (x86_64, luaJIT)
            name: Linux (x86_64, luaJIT) - template_debug
            runner: ubuntu-20.04
            target: template_debug
            platform: linux
            arch: x86_64
          - identifier: linux-release (x86_64, luaJIT)
            name: Linux (x86_64, luaJIT) - template_release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: x86_64
          - identifier: linux-debug (x86_32, luaJIT)
            name: Linux (x86_32, luaJIT) - template_debug
            runner: ubuntu-20.04
            target: template_debug
            platform: linux
            arch: x86_32
          - identifier: linux-release (x86_32, luaJIT)
            name: Linux (x86_32, luaJIT) - template_release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: x86_32

          - identifier: windows-debug (x86_64, luaJIT)
            name: Windows (x86_64, luaJIT) - template_debug
            runner: ubuntu-20.04
            target: template_debug
            platform: windows
            arch: x86_64
          - identifier: windows-release (x86_64, luaJIT)
            name: Windows (x86_64, luaJIT) - template_release
            runner: ubuntu-20.04
            target: template_release
            platform: windows
            arch: x86_64
          - identifier: windows-debug (x86_32, luaJIT)
            name: Windows (x86_32, luaJIT) - template_debug
            runner: ubuntu-20.04
            target: template_debug
            platform: windows
            arch: x86_32
          - identifier: windows-release (x86_32, luaJIT)
            name: Windows (x86_32, luaJIT) - template_release
            runner: ubuntu-20.04
            target: template_release
            platform: windows
            arch: x86_32

          - identifier: macos-release (universal, luaJIT)
            name: MacOS (universal, luaJIT) - template_release
            runner: macos-latest
            target: template_release
            platform: macos
            arch: universal
          - identifier: macos-debug (universal, luaJIT)
            name: MacOS (universal, luaJIT) - template_debug
            runner: macos-latest
            target: template_debug
            platform: macos
            arch: universal

    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install gcc-multilib
        if: ${{ startsWith(matrix.arch, 'x86_32') }}
        shell: sh
        run: |
          sudo apt install gcc-multilib g++-multilib
      - name: (Windows) Install mingw64
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        shell: sh
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: Set up Python
        uses: actions/setup-python@v2
          
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          scons --version
      - name: Load .scons_cache directory
        id: godot-extension-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.BASE_BRANCH}}-${{env.BASE_BRANCH}}
      - name: Compile extension
        shell: sh
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' luaappi_luaver=jit -j2
          ls -l project/addons/luaAPI/bin/
      - name: Strip bins
        if: "!startsWith(matrix.identifier, 'windows-') && startsWith(matrix.arch, 'x86_')"
        shell: sh
        run: |
          strip project/addons/luaAPI/bin/*
      - name: Prepare artifact
        shell: sh
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
          SCONS_CACHE_LIMIT: 7168
        run: |
          rm -rf ${{ github.workspace }}/project/.g* ${{ github.workspace }}/project/project.godot ${{ github.workspace }}/project/testing ${{ github.workspace }}/project/addons/luaAPI/bin/.gitignore
          cp -n '${{ github.workspace }}/README.md' '${{ github.workspace }}/LICENSE' ${{ github.workspace }}/project/addons/luaAPI
          mkdir ${{ github.workspace }}/project/container
          mv ${{ github.workspace }}/project/addons/ ${{ github.workspace }}/project/container/addons/
          mv ${{ github.workspace }}/project/demo/ ${{ github.workspace }}/project/container/demo/
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}-luaJIT
          path: |
            ${{ github.workspace }}/project/